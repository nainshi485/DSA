class Solution {
public:
    int findUnsortedSubarray(vector<int>& arr) {
        
        int n=arr.size();
        int small=arr[n-1];
        int lar=arr[0];
        if(n==1 || n==0){
            return 0;
        }
        if(arr[0]>arr[1]){
            small=min(small,arr[0]);
            lar=max(lar,arr[0]);
        }
        if(arr[n-1]<arr[n-2]){
            small=min(small,arr[n-1]);
            lar=max(lar,arr[n-1]);
        }
        for(int i=1;i<n-1;i++){
            if(arr[i]<arr[i-1] || arr[i]>arr[i+1]){
                small=min(small,arr[i]);
                lar=max(lar,arr[i]);
            }
        }
         int start=-1;
        int end=-1;
     int i=0;
        while(i<n and arr[i]<=small){
             
            i++;
        }
       start=i;
         i=n-1;
        while(i>=0 and arr[i]>=lar){
            
            i--;
        }
        end=i;
        if(start>end){
            return 0;
        }
    
        return end-start+1;
        
        
    }
};
