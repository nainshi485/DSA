// { Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// link -> https://practice.geeksforgeeks.org/problems/count-occurences-of-anagrams5839/1#
 // } Driver Code Ends
//User function template for C++
class Solution{
public:
	int search(string pat, string txt) {
	    // code here
	    unordered_map<char,int> mp;
	    for(int i=0;i<pat.size();i++){
	        mp[pat[i]]++;
	    }
	   // for(auto x:mp){
	   //     cout<<x.first<<"->"<<x.second<<endl;
	   // }
	    int i=0;
	    int j=0;
	    int count=mp.size();
	    int k=pat.size();
	    int n=txt.size();
	    int ans=0;
	    while(j<n){
	        if(mp.find(txt[j])!=mp.end()){
	             mp[txt[j]]--;
	            if(mp[txt[j]]==0){
	                count--;
	            }
	        }
	        
	        if(j-i+1 <k){
	            j++;
	        }else if(j-i+1==k){
	           
	            if(count==0){
	                
	                ans++;
	            }
	            if(mp.find(txt[i])!=mp.end()){
	                mp[txt[i]]++;
	               if(mp[txt[i]] == 1){
                        count++;
	                
	            }

	            }
	            i++;
	            j++;
	        }
	    }
	    return ans;
	}

};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        string pat, txt;
        cin >> txt >> pat;
        Solution ob;
        auto ans = ob.search(pat, txt);
        cout << ans << "\n";
    }
    return 0;
}  // } Driver Code Ends
