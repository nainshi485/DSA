/ { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
// Function to return Maximum Rectangular area in a histogram
// arr[]: input array
// n: size of array

class Solution
{
    public:
    long long getMaxArea(long long arr[], int n){
    
    // Your code here
    
    //Step 1 : Find the next small left
    vector<int> nextSmallLeft;
    findNextSmallLeft(nextSmallLeft,arr,n);
    
    //Step 2 : Find the next small right
    
     vector<int> nextSmallRight;
    findNextSmallRight(nextSmallRight,arr,n);
    //Step 3 : Find the width
    
    vector<int> width;
    for(int i=0;i<n;i++){
        width.push_back(nextSmallRight[i]-nextSmallLeft[i]-1);
    }
    //Step 4 : Find the maximum area
    long long maxArea=0;
    for(int i=0;i<n;i++){
        maxArea=max(maxArea,arr[i]*width[i]);
    }
    return maxArea;
}
void findNextSmallLeft( vector<int> &nextSmallLeft,long long arr[],int n){
    int pseudoLeftIndex=-1;
    stack<int> s;
    for(int i=0;i<n;i++){
        while(s.size()>0 && arr[s.top()]>=arr[i]){
            s.pop();
        }
        if(s.size()==0){
           nextSmallLeft.push_back(pseudoLeftIndex); 
        }else{
          nextSmallLeft.push_back(s.top());  
        }
        s.push(i);
    }
}
void findNextSmallRight(vector<int> &nextSmallRight,long long arr[],int n){
    int pseudoRightIndex=n;
    stack<int> s;
    for(int i=n-1;i>=0;i--){
        while(s.size()>0 and arr[s.top()]>=arr[i]){
            s.pop();
        }
        if(s.size()==0){
            nextSmallRight.push_back(pseudoRightIndex);
        }else{
            nextSmallRight.push_back(s.top());
        }
        s.push(i);
    }
    reverse(nextSmallRight.begin(),nextSmallRight.end());
}

};


// { Driver Code Starts.

int main()
 {
    long long t;

    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        
        long long arr[n];
        for(int i=0;i<n;i++)
            cin>>arr[i];
        Solution ob;
        cout<<ob.getMaxArea(arr, n)<<endl;
    
    }
	return 0;
}
  // } Driver Code Ends
